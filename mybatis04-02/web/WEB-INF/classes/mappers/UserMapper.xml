<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespcae 接口的全类名-->
<mapper namespace="xyz.leeyangy.dao.UserMapper">
    <!--查询所有用户-->
    <!--id和接口中的方法名一致-->


    <!--根据用户id查询用户信息-->
    <!--parameterType 用于配置方法入参,取值是参数的数据类型-->
    <!--    <select id="getUserById" parameterType="int" resultType="User">-->
    <!--        SELECT *-->
    <!--        from t_user-->
    <!--        where id = #{id}-->
    <!--    </select>-->

    <!--    1.查询所有-->
    <select id="findAll" resultMap="userMap">
        SELECT *
        from t_user
    </select>

    <!--    2.按id查询-->
    <select id="findUserById" resultMap="userMap" parameterType="int">
        select *
        from t_user
        where id = #{id}
    </select>

    <!--    3.通过name和password查询-->
    <select id="findUserByNameAndPassword" resultMap="userMap" parameterType="User">
        select *
        from t_user
        where t_name = #{name}and t_password=#{password};
    </select>
    <!--    4.通过name查询-->
    <select id="findUserByName" resultMap="userMap" parameterType="String">
        select *
        from t_user
        where t_name = #{name}
    </select>
    <!--    5.通过注解查询-->
    <select id="findById" resultMap="userMap" parameterType="User">
        select *
        from t_user
        where t_name=#{usernam} and t_password=#{password}
    </select>
    <!--
       resultMap  id:id唯一 对应resultMap的属性值
                  type:全类名(可以写别名)

    -->

    <resultMap id="userMap" type="User">
        <!--        column 对应数据库的字段名   property对应实体类名-->
        <!--    id与result标签作用相同，mybatis对主键做了特殊定义 -->
        <id column="id" property="id"></id>
        <result column="t_name" property="name"></result>
        <result column="t_password" property="password"></result>
        <result column="age" property="age"></result>
        <result column="birthday" property="birthday"></result>
    </resultMap>


</mapper>